{"ast":null,"code":"import _classCallCheck from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thurman/CS/React/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    _classCallCheck(this, StreamDelete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamDelete).apply(this, arguments));\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.deleteStream(_this.props.match.params.id);\n        },\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      // Content for modal\n      if (!this.props.stream) {\n        return 'Are you sure you want to delete this stream?';\n      }\n\n      return \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// No div needed as before because Modal is using React portal\n        React.createElement(Modal, {\n          title: \"Delete Stream\",\n          content: this.renderContent(),\n          actions: this.renderActions(),\n          onDismiss: function onDismiss() {\n            return history.push('/');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })\n      );\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  // ownProps is the same props object being passed to the component\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/thurman/CS/React/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","connect","fetchStream","deleteStream","Link","StreamDelete","props","match","params","id","stream","title","renderContent","renderActions","push","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,eAAxC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;IAGMC,Y;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;oCAEe;AAAA;;AACZ,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACH,KAAL,CAAWH,YAAX,CAAwB,KAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,CAAN;AAAA,SAAjB;AAA4E,QAAA,SAAS,EAAC,oBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ;AAOH;;;oCAEe;AACZ;AACA,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACpB,eAAO,8CAAP;AACH;;AACD,8EAAiE,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAAnF;AACH;;;6BAEQ;AACL,aACI;AACA,4BAAC,KAAD;AACI,UAAA,KAAK,EAAC,eADV;AAEI,UAAA,OAAO,EAAE,KAAKC,aAAL,EAFb;AAGI,UAAA,OAAO,EAAE,KAAKC,aAAL,EAHb;AAII,UAAA,SAAS,EAAE;AAAA,mBAAMb,OAAO,CAACc,IAAR,CAAa,GAAb,CAAN;AAAA,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AASH;;;;EAjCsBhB,KAAK,CAACiB,S;;AAkChC;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC;AACA,SAAO;AAACR,IAAAA,MAAM,EAAEO,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAHD;;AAKA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,WAAW,EAAXA,WAAD;AAAcC,EAAAA,YAAY,EAAZA;AAAd,CAAlB,CAAP,CAAsDE,YAAtD,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {connect} from 'react-redux';\nimport {fetchStream, deleteStream} from '../../actions';\nimport {Link} from 'react-router-dom';\n\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return (\n            <React.Fragment>\n                {/* Fragment used to fix the styling issue that comes with rendering two buttons within a div */}\n                <button onClick={() => this.props.deleteStream(this.props.match.params.id)} className='ui button negative'>Delete</button>\n                <Link to='/' className='ui button'>Cancel</Link>\n            </React.Fragment>\n        );\n    };\n\n    renderContent() {\n        // Content for modal\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream?'\n        }\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n    }\n\n    render() {\n        return (\n            // No div needed as before because Modal is using React portal\n            <Modal\n                title='Delete Stream'\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/')}\n            />\n        );\n    };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    // ownProps is the same props object being passed to the component\n    return {stream: state.streams[ownProps.match.params.id]}\n}\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}