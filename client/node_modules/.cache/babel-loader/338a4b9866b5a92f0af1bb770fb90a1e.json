{"ast":null,"code":"import _classCallCheck from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thurman/CS/React/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null\n    };\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    // Only want to initialize library once when the class is rendered to the screen\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '305103598371-84lhlc1c1pik0bftgqi86ou70ott5fd9.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          //client.init returns a promise, invoke arrow function after library has been initiated\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.setState({\n            isSignedIn: _this2.auth.isSignedIn.get()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Google Auth\");\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\n;\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/thurman/CS/React/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","state","isSignedIn","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAACC,MAAAA,UAAU,EAAE;AAAb,K;;;;;;AACR;wCACoB;AAAA;;AAChBC,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACnCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAE,0EADU;AAEpBC,UAAAA,KAAK,EAAE;AAFa,SAAxB,EAGGC,IAHH,CAGQ,YAAM;AAAE;AACZ,UAAA,MAAI,CAACC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACZ,YAAAA,UAAU,EAAE,MAAI,CAACS,IAAL,CAAUT,UAAV,CAAqBa,GAArB;AAAb,WAAd;AACH,SAND;AAOH,OARD;AASH;;;6BAEQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;;;EAjBoBhB,KAAK,CAACiB,S;;AAkB9B;AAED,eAAehB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = {isSignedIn: null};\n    // Only want to initialize library once when the class is rendered to the screen\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '305103598371-84lhlc1c1pik0bftgqi86ou70ott5fd9.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => { //client.init returns a promise, invoke arrow function after library has been initiated\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({isSignedIn: this.auth.isSignedIn.get()});\n            });\n        });\n    }\n\n    render() {\n        return <div>Google Auth</div>\n    };\n};\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}