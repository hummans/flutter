{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport history from '../history';\nexport var signIn = function signIn(userId) {\n  return {\n    type: 'SIGN_IN',\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: 'SIGN_OUT'\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: 'CREATE_STREAM',\n                  payload: response.data\n                }); // Programmatic navigation to return to root route\n\n                history.push('/'); //Call push with the root route path: /\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('streams');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: 'FETCH_STREAMS',\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: 'FETCH_STREAM',\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.patch(\"/streams/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: 'EDIT_STREAM',\n                  payload: response.data\n                });\n                history.push('/');\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.delete(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: 'DELETE_STREAM',\n                  payload: id\n                });\n                history.push('/');\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; // history.push('/') used to direct user back to root after the action creator is called","map":{"version":3,"sources":["/Users/thurman/CS/React/streams/client/src/actions/index.js"],"names":["streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","response","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from '../apis/streams';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n    return {\n        type: 'SIGN_IN',\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const {userId} = getState().auth;\n    const response = await streams.post('/streams', {...formValues, userId});\n    dispatch({type: 'CREATE_STREAM', payload: response.data});\n    // Programmatic navigation to return to root route\n    history.push('/'); //Call push with the root route path: /\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('streams');\n    dispatch({type: 'FETCH_STREAMS', payload: response.data});\n};\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({type: 'FETCH_STREAM', payload: response.data});\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n    dispatch({type: 'EDIT_STREAM', payload: response.data});\n    history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({type: 'DELETE_STREAM', payload: id});\n    history.push('/');\n};\n\n// history.push('/') used to direct user back to root after the action creator is called"]},"metadata":{},"sourceType":"module"}