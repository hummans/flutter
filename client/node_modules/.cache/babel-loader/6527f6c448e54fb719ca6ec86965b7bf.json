{"ast":null,"code":"import _classCallCheck from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thurman/CS/React/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thurman/CS/React/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.createStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    // Normally onSubmit would refer to {this.onSubmit} but Redux form handles it differently\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Create a Stream\"), React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    // Only runs if user did not input a title\n    errors.title = 'You must enter a title.';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description.';\n  }\n\n  return errors;\n}; // Combine both connect reduxform function with redux connect function\n\n\nvar formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream: createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/thurman/CS/React/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","onSubmit","formValues","console","log","props","Component","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,YAAKG,KAAL,CAAWP,YAAX,CAAwBI,UAAxB;AACH,K;;;;;;;AAED;6BACS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKD,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAdsBL,KAAK,CAACU,S;;AAiBjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACL,UAAD,EAAgB;AAC7B,MAAMM,MAAM,GAAG,EAAf;;AACA,MAAI,CAACN,UAAU,CAACO,KAAhB,EAAuB;AACnB;AACAD,IAAAA,MAAM,CAACC,KAAP,GAAe,yBAAf;AACH;;AACD,MAAI,CAACP,UAAU,CAACQ,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,+BAArB;AACH;;AACD,SAAOF,MAAP;AACH,CAVD,C,CAYA;;;AACA,IAAMG,WAAW,GAAGC,SAAS,CAAC;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BN,EAAAA,QAAQ,EAAEA;AAFgB,CAAD,CAAT,CAGjBP,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAP,CAAP,CAA8Ba,WAA9B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        console.log(formValues);\n        this.props.createStream(formValues);\n    }\n\n    // Normally onSubmit would refer to {this.onSubmit} but Redux form handles it differently\n    render() {\n        return (\n            <div>\n                <h3>Create a Stream</h3>\n                <StreamForm onSubmit={this.onSubmit}/>\n            </div>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if (!formValues.title) {\n        // Only runs if user did not input a title\n        errors.title = 'You must enter a title.';\n    }\n    if (!formValues.description) {\n        errors.description = 'You must enter a description.';\n    }\n    return errors;\n};\n\n// Combine both connect reduxform function with redux connect function\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate: validate\n})(StreamCreate);\n\nexport default connect(null, {createStream})(formWrapped);"]},"metadata":{},"sourceType":"module"}